from Bits import *
from Input import Input
from Mafs import Mafs

assert ones(1) == 0b1
assert ones(2) == 0b11
assert ones(3) == 0b111
assert ones(64) == 2**64-1

assert Input.chunk("hello world") == ['0110100001100101011011000110110001101111001000000111011101101111', '0111001001101100011001000000001100000011000000110000001100000011']

assert Input.sanitize("abcdefgh") == '0110000101100010011000110110010001100101011001100110011101101000'

assert leftRotate('1101011') == '1010111'
assert leftRotate('1010111') == '0101111'
assert leftRotate('0101111') == '1011110'
assert leftRotate('1011110') == '0111101'
assert leftRotate('0111101') == '1111010'

assert xor('101', '111') == '010'

assert Mafs.split('011000110111001001111001011100000111010001101111') == ['011000', '110111', '001001', '111001', '011100', '000111', '010001', '101111']

assert Mafs.getIJ('011011') == (1, 13)

assert DES('hello world', '0010011011100101011101001111001101101001100000110101100010000011') == '1011001100100111110001010001011110001000110110011010010111100101100101000000111111011000011001010001000111101001011000101001000'


print("tests pass :tada:")
